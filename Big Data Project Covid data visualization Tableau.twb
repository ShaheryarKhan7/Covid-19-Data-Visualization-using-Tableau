<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.22.0707.2146                               -->
<workbook original-version='18.1' source-build='2021.1.17 (20211.22.0707.2146)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='country_wise_latest' inline='true' name='federated.1wmu2s01woj5z31f1u5g000wroqa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_wise_latest' name='textscan.0trrsyl0or2o0a117u68k0b30szx'>
            <connection class='textscan' directory='C:/Users/PACE COMPUTERS/Downloads/archive' filename='country_wise_latest.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0trrsyl0or2o0a117u68k0b30szx' name='country_wise_latest.csv' table='[country_wise_latest#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country/Region' ordinal='0' />
            <column datatype='integer' name='Confirmed' ordinal='1' />
            <column datatype='integer' name='Deaths' ordinal='2' />
            <column datatype='integer' name='Recovered' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
            <column datatype='integer' name='New cases' ordinal='5' />
            <column datatype='integer' name='New deaths' ordinal='6' />
            <column datatype='integer' name='New recovered' ordinal='7' />
            <column datatype='real' name='Deaths / 100 Cases' ordinal='8' />
            <column datatype='real' name='Recovered / 100 Cases' ordinal='9' />
            <column datatype='real' name='Deaths / 100 Recovered' ordinal='10' />
            <column datatype='integer' name='Confirmed last week' ordinal='11' />
            <column datatype='integer' name='1 week change' ordinal='12' />
            <column datatype='real' name='1 week % increase' ordinal='13' />
            <column datatype='string' name='WHO Region' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0trrsyl0or2o0a117u68k0b30szx' name='country_wise_latest.csv' table='[country_wise_latest#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country/Region' ordinal='0' />
            <column datatype='integer' name='Confirmed' ordinal='1' />
            <column datatype='integer' name='Deaths' ordinal='2' />
            <column datatype='integer' name='Recovered' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
            <column datatype='integer' name='New cases' ordinal='5' />
            <column datatype='integer' name='New deaths' ordinal='6' />
            <column datatype='integer' name='New recovered' ordinal='7' />
            <column datatype='real' name='Deaths / 100 Cases' ordinal='8' />
            <column datatype='real' name='Recovered / 100 Cases' ordinal='9' />
            <column datatype='real' name='Deaths / 100 Recovered' ordinal='10' />
            <column datatype='integer' name='Confirmed last week' ordinal='11' />
            <column datatype='integer' name='1 week change' ordinal='12' />
            <column datatype='real' name='1 week % increase' ordinal='13' />
            <column datatype='string' name='WHO Region' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New cases]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>New cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New deaths]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>New deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New recovered]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>New recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths / 100 Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths / 100 Cases]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Deaths / 100 Cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered / 100 Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovered / 100 Cases]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Recovered / 100 Cases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths / 100 Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deaths / 100 Recovered]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Deaths / 100 Recovered</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed last week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed last week]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>Confirmed last week</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 week change</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 week change]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>1 week change</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 week % increase</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1 week % increase]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>1 week % increase</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO Region]</local-name>
            <parent-name>[country_wise_latest.csv]</parent-name>
            <remote-alias>WHO Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='1 Week % Increase' datatype='real' name='[1 week % increase]' role='measure' type='quantitative' />
      <column caption='1 Week Change' datatype='integer' name='[1 week change]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='country_wise_latest.csv' datatype='table' name='[__tableau_internal_object_id__].[country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873]' role='measure' type='quantitative' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Recovered:qk]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country/Region:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#26897e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#5fbb68'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#91dcea'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a08400'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#a4a4d5'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bbc9e5'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='country_wise_latest.csv' id='country_wise_latest.csv_381DBCB39A7A4ADDAA0FA44F90FB3873'>
            <properties context=''>
              <relation connection='textscan.0trrsyl0or2o0a117u68k0b30szx' name='country_wise_latest.csv' table='[country_wise_latest#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country/Region' ordinal='0' />
                  <column datatype='integer' name='Confirmed' ordinal='1' />
                  <column datatype='integer' name='Deaths' ordinal='2' />
                  <column datatype='integer' name='Recovered' ordinal='3' />
                  <column datatype='integer' name='Active' ordinal='4' />
                  <column datatype='integer' name='New cases' ordinal='5' />
                  <column datatype='integer' name='New deaths' ordinal='6' />
                  <column datatype='integer' name='New recovered' ordinal='7' />
                  <column datatype='real' name='Deaths / 100 Cases' ordinal='8' />
                  <column datatype='real' name='Recovered / 100 Cases' ordinal='9' />
                  <column datatype='real' name='Deaths / 100 Recovered' ordinal='10' />
                  <column datatype='integer' name='Confirmed last week' ordinal='11' />
                  <column datatype='integer' name='1 week change' ordinal='12' />
                  <column datatype='real' name='1 week % increase' ordinal='13' />
                  <column datatype='string' name='WHO Region' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confirmed vs Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#800000' fontname='Comic Sans MS' fontsize='13'>Confirmed vs Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.1wmu2s01woj5z31f1u5g000wroqa' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmu2s01woj5z31f1u5g000wroqa'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' />
              <size column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Confirmed:qk]' />
              <text column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='shape' value='asterisk' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]</rows>
        <cols>[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{28AD7006-CCDF-404E-B4FE-BAC4F01AF9F0}' />
    </worksheet>
    <worksheet name='Deaths per 100 Cases '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#800000' fontname='Comic Sans MS' fontsize='13'>Deaths per 100 Cases </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.1wmu2s01woj5z31f1u5g000wroqa' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmu2s01woj5z31f1u5g000wroqa'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Deaths / 100 Cases]' role='measure' type='quantitative' />
            <column-instance column='[Deaths / 100 Cases]' derivation='Avg' name='[avg:Deaths / 100 Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths / 100 Cases]' derivation='Sum' name='[sum:Deaths / 100 Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Western Sahara&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Yemen&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths / 100 Cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.4062983989715576' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</rows>
        <cols>[federated.1wmu2s01woj5z31f1u5g000wroqa].[avg:Deaths / 100 Cases:qk]</cols>
      </table>
      <simple-id uuid='{1785864D-0007-4B09-8E7F-A7BF19B2B21B}' />
    </worksheet>
    <worksheet name='Dual Axis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#800000' fontname='Comic Sans MS' fontsize='14'>Dual Axis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.1wmu2s01woj5z31f1u5g000wroqa' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmu2s01woj5z31f1u5g000wroqa'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Recovered:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Recovered:qk] + [federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk])</rows>
        <cols>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{346F93C6-0CA4-49D5-B125-AA23A4C6E03C}' />
    </worksheet>
    <worksheet name='Global Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#800000' fontname='Comic Sans MS' fontsize='13'>Global Covid Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.1wmu2s01woj5z31f1u5g000wroqa' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wmu2s01woj5z31f1u5g000wroqa'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Confirmed:qk]' />
              <lod column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' />
              <lod column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Active:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f07f5a' />
                <format attr='size' value='0.75762432813644409' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmu2s01woj5z31f1u5g000wroqa].[Latitude (generated)]</rows>
        <cols>[federated.1wmu2s01woj5z31f1u5g000wroqa].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{28B8674C-8F72-4A1F-83BC-710CF2426F60}' />
    </worksheet>
    <worksheet name='Top 10 Covid Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#800000' fontname='Comic Sans MS' fontsize='13'>Top 10 Confirmed Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.1wmu2s01woj5z31f1u5g000wroqa' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmu2s01woj5z31f1u5g000wroqa'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;US&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f07f5a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Confirmed:qk]</rows>
        <cols>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</cols>
      </table>
      <simple-id uuid='{4DE2827E-7DDC-4F71-A4C1-5C4F77FDD351}' />
    </worksheet>
    <worksheet name='Top 10 Death Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#800000' fontname='Comic Sans MS' fontsize='13'>Top 10 Death Cases </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.1wmu2s01woj5z31f1u5g000wroqa' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmu2s01woj5z31f1u5g000wroqa'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]' />
              <color column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]' />
              <text column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' />
              <text column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{262977B9-A8FB-484F-B8C4-F6664AA585FF}' />
    </worksheet>
    <worksheet name='Top 10 Recovered Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#800000' fontname='Comic Sans MS' fontsize='13'>Top 10 Recovered Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='country_wise_latest' name='federated.1wmu2s01woj5z31f1u5g000wroqa' />
          </datasources>
          <datasource-dependencies datasource='federated.1wmu2s01woj5z31f1u5g000wroqa'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Avg' name='[avg:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country/Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='center' />
            <format attr='text-align' scope='rows' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' />
              <size column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[avg:Recovered:qk]' />
              <text column='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontalignment='1' fontcolor='#787878'>Country/Region:&#9;</run>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#787878'>Avg. Recovered:&#9;</run>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.1wmu2s01woj5z31f1u5g000wroqa].[avg:Recovered:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9157B253-3EA9-4043-B157-63EBEB4B40FE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='COVID DATA VISUALIZATION'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='18' param='horz' type-v2='layout-flow' w='98614' x='693' y='1351'>
            <zone h='97298' id='9' param='horz' type-v2='layout-flow' w='98614' x='693' y='1351'>
              <zone h='97298' id='7' type-v2='layout-basic' w='98614' x='693' y='1351'>
                <zone h='54220' id='3' name='Top 10 Covid Cases' w='29348' x='693' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49152' id='5' name='Global Cases' w='33848' x='65459' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43078' id='6' name='Top 10 Death Cases' w='29348' x='693' y='55571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48146' id='11' name='Top 10 Recovered Cases' w='22165' x='30041' y='50503'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48146' id='13' name='Confirmed vs Deaths' w='24848' x='52206' y='50503'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49152' id='15' name='Deaths per 100 Cases ' w='35418' x='30041' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48146' id='16' name='Dual Axis' w='22253' x='77054' y='50503'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='19' param='vert' type-v2='layout-flow' w='98614' x='693' y='1351'>
                <zone fixed-size='280' h='54220' id='3' is-fixed='true' name='Top 10 Covid Cases' w='29348' x='693' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49152' id='15' is-fixed='true' name='Deaths per 100 Cases ' w='35418' x='30041' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49152' id='5' is-fixed='true' name='Global Cases' w='33848' x='65459' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48146' id='11' is-fixed='true' name='Top 10 Recovered Cases' w='22165' x='30041' y='50503'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48146' id='13' is-fixed='true' name='Confirmed vs Deaths' w='24848' x='52206' y='50503'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48146' id='16' is-fixed='true' name='Dual Axis' w='22253' x='77054' y='50503'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43078' id='6' is-fixed='true' name='Top 10 Death Cases' w='29348' x='693' y='55571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8F4774AA-E278-481C-BAA4-30D5AFB5BF67}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top 10 Covid Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8262295E-43B4-461F-9348-504FB43B13CB}' />
    </window>
    <window class='worksheet' name='Global Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA65961B-F8C8-4C2E-870D-2B976261F5B0}' />
    </window>
    <window class='worksheet' name='Top 10 Death Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B598A6A7-1D2A-4ED6-9DB7-D1535586590F}' />
    </window>
    <window class='worksheet' name='Top 10 Recovered Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{944FA43B-B425-4A04-B3A7-AB10B0B8B12F}' />
    </window>
    <window class='worksheet' name='Confirmed vs Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4930DF0-D606-4973-B038-3B841678F2B7}' />
    </window>
    <window class='worksheet' name='Deaths per 100 Cases '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C793423-2923-4329-9A19-C827706E8128}' />
    </window>
    <window class='worksheet' name='Dual Axis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1wmu2s01woj5z31f1u5g000wroqa].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wmu2s01woj5z31f1u5g000wroqa].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3790332B-835F-4445-8D02-DED65E55E3D1}' />
    </window>
    <window class='dashboard' maximized='true' name='COVID DATA VISUALIZATION'>
      <viewpoints>
        <viewpoint name='Confirmed vs Deaths'>
          <zoom type='entire-view' />
          <highlight field='[federated.1wmu2s01woj5z31f1u5g000wroqa].[sum:Confirmed:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Deaths per 100 Cases ' />
        <viewpoint name='Dual Axis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Covid Cases' />
        <viewpoint name='Top 10 Death Cases' />
        <viewpoint name='Top 10 Recovered Cases' />
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{8B8DA57B-C054-4479-A2F4-E0788FED74D4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COVID DATA VISUALIZATION' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Confirmed vs Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths per 100 Cases ' width='192'>
      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
      hJImAiCUtP8P5JHc2mDH2hgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dual Axis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVnUlEQVR4nO3dWWxcV57f8e/dal9YJMVFJMVFm0Xtku2x3WrZ03Hc7ekeDNATZBtPgiAP
      eYyDIEkjQRDnKZ2XBEECzGSQAJ1gBhNMpjEO0DPdnrZatiXbkrW1NlKkKImLuJPF2re75YGS
      bFlb0awq0r7/DyBbqiqe+z+s+t1zt7pHcV3XRQiPUje6ACE2kgRAeNqmCEAul8OyrI0uQ3jQ
      pgiAZVk4jrPRZQgP2hQBEF8PjllkdOga00uZdbbkcunCee6O3+Ty5askc+Wa1PdVSABElWxO
      //xdprM25WLx2S/PL/L/TpzlcYcY3UqKidkcZ987gWVY/PTdv3xiM0NXr1LPjWO9jm2LbxKr
      yOSSwu/+4ABBt8j//V//k5LjMvDCMZZvTnJom4+ZYAvnfv4+mpXlwKvf4aOTH9AZ93HqoxMc
      OPo8s3eTvNynM5SP0dE/wMz0CACaqvLZX/8f3j9/k/5Dr+JfHKHgmIT7j5G6exm1MMsnIwto
      /ma25GfIbomQTDfxT9763rrX4DICiOpoPkJanvlkgVx6gZzezpuvHmFhYQ7TMinkcjiOS0f/
      Pl473EOwdTuD+5/n4M4OWnsHef34cQZa4MTNMs2KRW/vVlzH5Oqnp+jctZfJiRmOfOtvsr8v
      xordwndfewHNscF1mVlI8tr3vk+wsEzJ8XP8u28QU+zHji5r7tY777zzTg3aWZdSqYRhGGia
      ttGliCdRNPoHujl/+kPKoW72tDmcG1vh+LFjWMnbJN04AwN9NEWjtLU1E27rJZybYNGK0tO5
      hbaWJiorE+RCfQS7dzPYGcHnC/HKd79H8e4dBo8eYvLmGLHOHbQ4M/zio4u09u1jd18bh/fv
      5dzHHzPwwnF6t8RJdLQR0Hy0tTWjrLdbm+FMcCqVIhQK4fP5NroUUSeubTI8fIO+Xbtxy3OE
      o9ue8EqH8RtXmM0qHDy0n5BR342UhwKQSqWoVCp1XeDjFItFfD6fjACi4WQEEJ4mO8HC0yQA
      wtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLT
      JADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQA
      wtMkAMLTJADC0yQAwtPWHQDbKjM7N4/tQG5lnuHhYeaTWaxihtGxO5RMh3I+xc1b41Rsm3y+
      gOs6pNPpWtQvxLqse5rU1OI807NLJFrbmJ2aINjSSyhgcP3aJeLNTQzfvgvpKZoSUYZvz+Oz
      8rQGLNLBrcTjteiCEF/dugPQ0rmNTD4PuJQLRe6mRtH27EEPtNA70EPmyhRqKE7/zh1cuXyH
      dHKSKa2FN47HcRwH27axbRvTNGvQHSHWpnYTZbsunTsPsDukcO7aHfyOSSETx9R1yCfJryxi
      GSHiHf1sJcfUcpGeliCqqqJpGoZhyBxhouHWHYDpsWuMTy0ym1PYvcXg7PACe488T9BMcmF4
      igOHD6Pk/FweXeDQkf2UslkSiR3MzM7hElz3PK9CrIfMEik8TQ6DCk+TAAhPkwAIT5MACE+T
      AAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAI
      T5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT6s6AJNTk1y+fLmetQjRcFUHYHlpmYnJiXrWIkTD
      VRWAH//4x/WuQ4gN8dQAnPjVCebm5qiYlUbVI0RDPfXu0C3NLfh8Po4dO0Z7RzuBYKBRdQnR
      EHJ3aOFpTx0BHMeiVPp880fTffh9tZtTQ4iN9tRPczEzz8kTJ7l4dZa9u+Lkokf4h7/9fKNq
      E6LunroTHG7q4ge/+0P62qPEmuIEda1RdQnREFXtAyzPTrCQqdDZvY2msL/mRcg+gNgoVZwH
      yPPuH/8J07PTfPjhtfpXJEQDVREAFcOncvnTs6jx6CPPlgtphm6MYjku2eVpPvnkLJmyTSE5
      w+lPPyNdMMksTvHxp+fJlU2WlpK4jsn0zFwduiPE2lRxSMdl8KXv0bejj+bmR2e2LhXL4JpY
      tsXY+AIH9u9gZGQUSjmO7O1j+M4UFBY5tKeLkVszBJUyuflxAj376tAdIdamigA4nP3FTzm/
      bSf7j3ybbx3sf+jZeEsbyZVlcGz0UJRwKIauTaEH4wSjUQwrhRoME463ok+sTpQ9qTbzxqBP
      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
    </thumbnail>
    <thumbnail height='192' name='Global Cases' width='192'>
      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
      /wHOYZ+FFQRP3AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Covid Cases' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Death Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Recovered Cases' width='192'>
      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
      +b9xNZULEtBvdQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
